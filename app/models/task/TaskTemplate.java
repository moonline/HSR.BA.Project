package models.task;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name = "tasktemplate")
public class TaskTemplate {

	@SuppressWarnings("UnusedDeclaration") //generated by hibernate
	@Id
	@SequenceGenerator(name = "tasktemplate_seq", sequenceName = "tasktemplate_seq")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "tasktemplate_seq")
	private Long id;

	@ElementCollection
	@CollectionTable(name = "Node", joinColumns = @JoinColumn(name = "tasktemplate_id"))
	@Column(name = "dksnode")
	private List<String> dksNode = new ArrayList<>();

	@ManyToOne
	private TaskTemplate parent; //todo, guarantee parent has no parent and new parent hast no children

	private String name;

	@OneToMany(cascade = CascadeType.PERSIST)
	@JoinColumn(name = "task_id", nullable = false)
	private List<TaskPropertyValue> properties = new ArrayList<>();

	public Long getId() {
		return id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public TaskTemplate getParent() {
		return parent;
	}

	public void setParent(TaskTemplate parent) {
		this.parent = parent;
	}

	public List<String> getDksNode() {
		return dksNode;
	}

	public List<TaskPropertyValue> getProperties() {
		return properties;
	}

	public void addProperty(TaskPropertyValue property) {
		this.properties.add(property);
	}

	public void removeProperty(TaskPropertyValue property) {
		this.properties.remove(property);
	}

}
